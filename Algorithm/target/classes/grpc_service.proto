syntax = "proto3";
option java_package = "grpc";

service GRPCControlService {
  rpc Forward(MoveRequest) returns (Status) {}

  rpc TurnClockwise(MoveRequest) returns (Status) {}

  rpc TurnAntiClockwise(MoveRequest) returns (Status) {}

  rpc Calibrate(CalibrateRequest) returns (Status) {}

  rpc WaitForRobotStart(RobotStatus) returns (Status) {}

  rpc StopRobot(RobotStatus) returns (Status) {}
}

service GRPCDataService {
  rpc GetMetrics(MetricRequest) returns (MetricResponse) {}

  rpc SetPosition(Position) returns (Position) {}

  rpc SetMap(MapDescription) returns (Status) {}

  rpc GetWayPoint(EmptyRequest) returns (Position) {}
}

message MoveRequest {
  uint32 step = 1;
}

message Status {
  bool status = 1;
}

message EmptyRequest {
}

message TurnRequest {
  uint32 angle = 1;
}

message CalibrateRequest {
}

message RobotStatus {
  enum Mode {
    EXPLORATION = 0;
    FASTEST_PATH = 1;
  }

  Mode mode = 1;
}

message MetricRequest {
  // Sensor ID. Leave this field at default value (0) to fetch all metric data
  uint32 id = 1;
}

message MetricResponse {
  map<uint32, double> values = 1;
}

message Position {
  // Period for getting position info. This field is only for `StreamGetMetrics`.
  uint32 x = 1;
  uint32 y = 2;
}

message MapDescription {
  bytes description = 1;
}